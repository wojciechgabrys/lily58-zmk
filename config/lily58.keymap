/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <300>;
    quick-tap-ms = <200>;
};

&lt {
    quick-tap-ms = <200>;
    tapping-term-ms = <300>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };

        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;

            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&gresc            &kp N1  &kp N2            &kp N3       &kp N4          &kp N5                                     &kp N6            &kp N7        &kp N8          &kp N9              &kp N0    &kp BACKSPACE
&kp TAB           &kp Q   &kp W             &kp E        &kp R           &kp T                                      &kp Y             &kp U         &kp I           &kp O               &kp P     &kp BACKSPACE
&mt LCTRL ESCAPE  &kp A   &hm LEFT_SHIFT S  &hm LCTRL D  &hm LEFT_ALT F  &hm LEFT_COMMAND G                         &hm LEFT_SHIFT H  &hm LCTRL J   &hm LEFT_ALT K  &hm LEFT_COMMAND L  &kp SEMI  &kp SQT
&kp LSHFT         &kp Z   &kp X             &kp C        &kp V           &kp B               &kp LBKT     &kp RBKT  &kp N             &kp M         &kp COMMA       &kp DOT             &kp FSLH  &kp RSHFT
                                            &kp LALT     &kp LGUI        &lt 1 DELETE        &kp SPACE    &kp RET   &lt 2 BACKSPACE   &kp LEFT_ALT  &kp RGUI
            >;
        };

        num_nav {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "NUM NAV";
            bindings = <
&kp GRAVE  &kp F1           &kp F2       &kp F3    &kp F4      &kp F5                                                      &kp F6          &kp F7         &kp F8        &kp F9                &kp F10                &kp DELETE
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                                                 &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DELETE
&kp GRAVE  &kp EXCL         &kp AT       &kp HASH  &kp DOLLAR  &kp PRCNT                                                   &kp LEFT        &kp DOWN       &kp UP_ARROW  &kp RIGHT             &kp RIGHT_BRACKET      &trans
&trans     &trans           &trans       &trans    &trans      &trans       &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp UNDERSCORE  &kp EQUAL      &kp PIPE      &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
                                         &trans    &trans      &trans       &trans                  &trans                 &trans          &trans         &trans
            >;
        };

        sym {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Symbols";
            bindings = <
&kp TILDE  &trans           &trans       &trans    &trans      &trans                                          &trans          &trans         &trans         &trans                &trans                 &trans
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                                     &kp CARET       &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp TILDE  &trans           &trans       &trans    &trans      &trans                                          &kp MINUS       &kp PLUS       &kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans     &trans           &trans       &trans    &trans      &trans       &kp LESS_THAN    &kp GREATER_THAN  &kp UNDERSCORE  &kp EQUAL      &kp PIPE       &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
                                         &trans    &trans      &trans       &trans           &trans            &trans          &trans         &trans
            >;
        };

        adj {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0           &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                       &trans         &trans         &trans         &trans            &trans             &trans
&trans      &trans                 &trans        &trans        &trans        &trans                                             &kp LC(LG(Q))  &kp LC(LG(W))  &kp C_PREV     &kp C_PLAY_PAUSE  &kp C_NEXT         &trans
&trans      &kp LS(LC(LA(LG(A))))  &trans        &trans        &trans        &kp LG(LC(LA(LS(G))))                              &kp LC(LG(H))  &kp LC(LG(J))  &kp LC(LG(K))  &kp LG(LC(L))     &kp C_VOL_UP       &kp C_MUTE
&trans      &trans                 &trans        &trans        &trans        &kp LG(LA(LC(LS(B))))  &trans         &trans       &kp LC(LG(A))  &kp LG(LC(S))  &trans         &trans            &kp C_VOLUME_DOWN  &trans
                                                 &trans        &trans        &trans                 &bootloader    &bootloader  &trans         &trans         &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
